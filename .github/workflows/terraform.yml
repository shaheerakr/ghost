# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the "main" branch, `terraform apply` will be executed.
#

name: Deploy Core Infrastructure via Terraform

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.2
    # setup terraform cache directory and use remote caching(s3)
    
    - name: Extract branch name
      shell: bash
      id: extract_branch
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "BRANCH=${{ steps.branch-names.outputs.base_ref_branch }}" >> "$GITHUB_ENV"
        else
          echo "BRANCH=${{ steps.branch-names.outputs.current_branch }}" >> "$GITHUB_ENV"
        fi

    - name: Terraform Init
      run: cd infra && terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform validate
      run:  cd infra && terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: cd infra && terraform plan -out=plan.out
    - run: terraform show -no-color ./infra/plan.out > ./infra/plan.txt
    - run: terraform show -json ./infra/plan.out > ./infra/plan.json
    - uses: ahmadnassri/action-terraform-report@v3
      if: github.event_name == 'pull_request'
      with:
        # tell the action the plan outputs
        terraform-text: ./infra/plan.txt
        terraform-json: ./infra/plan.json
        remove-stale-reports: true

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve ./infra/plan.out
